name: Deploy IOS

on:
  workflow_dispatch: # Manually trigger the workflow
        inputs: 
          app_identifier:
            description: 'App Identifier'
            required: true
            default: 'com.example.app'
          team_id:
            description: 'Team ID'
            required: true
            default: 'XXXXXXXXXX'
          itc_team_id:
            description: 'ITC Team ID'
            required: true
            default: 'XXXXXXXXXX'
          apple_id:
            description: 'Apple ID'
            required: true
            default: 'app'
          app_name:
            description: 'App Name'
            required: true
            default: 'new_app'
          repository:
            description: 'Repository'
            required: true
            default: 'app'
          branch:
            description: 'Branch'
            required: true
            default: 'main'
           


jobs:
  build:
    runs-on: macos-latest
                
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          repository: ${{ github.event.inputs.repository }}
          token: ${{ secrets.PAT_TOKEN }}
  
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
  
      - name: Install Fastlane
        run: gem install fastlane -NV

      - name: Install CocoaPods
        run: gem install cocoapods
      
      - name: Install dependencies
        run: cd client/ios/App && pod install

      - name: list files
        run: ls -la
            
      - name: Deploy IOS 
        env:
          APP_IDENTIFIER: ${{ github.event.inputs.app_identifier }}
          TEAM_ID: ${{ github.event.inputs.team_id }}
          APP_NAME: ${{ github.event.inputs.app_name }}
          ITC_TEAM_ID: ${{ github.event.inputs.itc_team_id }}
          APPLE_ID: ${{ github.event.inputs.apple_id }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
        run: |
          cd client/ios/App && mkdir fastlane

          echo '
          default_platform(:ios)
          
          platform :ios do
            lane :deployios do
            app_identifier = ENV["APP_IDENTIFIER"]
            team_id = ENV["TEAM_ID"]
            itc_team_id = ENV["ITC_TEAM_ID"]
            apple_id = ENV["APPLE_ID"]
            app_name = ENV["APP_NAME"]

            # Create a new app on App Store Connect
            produce(
              app_name: app_name,
              app_identifier: app_identifier,
              language: "English",
              app_version: "1.0",
              sku: app_identifier,
              team_id: team_id,
              itc_team_id: itc_team_id,
              username: apple_id
            )
            cert(
              development: false,
              username: apple_id
            )
            sigh(
              app_identifier: app_identifier,
              username: apple_id
            )
            get_certificates(
              username: apple_id
            )
            get_provisioning_profile(
              app_identifier: app_identifier,
              username: apple_id
            )

            increment_build_number(xcodeproj: "App.xcodeproj")
            enable_automatic_code_signing(path: "App.xcodeproj")
        
            # Build and upload to App Store Connect
            gym(
              scheme: "App",
              export_method: "app-store",
              export_options: {
                uploadBitcode: true,
                uploadSymbols: true
              }
            )
        
            # Upload to TestFlight
            pilot(
              skip_waiting_for_build_processing: true,
              distribute_external: true,
              username: apple_id
            )
        
            # Submit to App Store Connect
            deliver(
              skip_waiting_for_build_processing: true,
              force: true,
              username: apple_id
            )
        
            # Upload to App Store Connect
            upload_to_app_store(
              skip_waiting_for_build_processing: true,
              force: true,
              username: apple_id
            )

              


            end
          end
          ' > fastlane/Fastfile

          ls -la
          fastlane deployios


