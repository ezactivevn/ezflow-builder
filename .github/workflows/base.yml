name: Client Workflow

on:
  workflow_dispatch:
    inputs:
      app_id:
        description: "Application ID"
        required: true
        default: "unknown"
      test_data:
        description: "Test data"
        required: true
        default: "0"
      email:
        description: "Customer Email"
        required: true
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main
          repository: ezactivevn/ezleague-core
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Git
        run: |
          git config --global user.name Phu Hoang
          git config --global user.email ${{ vars.EMAIL }}

      - name: Authenticate with GitHub
        env:
          TOKEN: ${{ secrets.PAT_TOKEN }}
        run: echo "machine github.com login ${{vars.USERNAME}} password $TOKEN" > ~/.netrc

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"

      - name: Cache dependencies
        id: cache_python
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        if: steps.cache_python.outputs.cache-hit != 'true'

      - name: Cache node modules
        id: cache_node_modules
        uses: actions/cache@v2
        with:
          path: client/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
        if: steps.cache_node_modules.outputs.cache-hit != 'true'

      - name: Cache Firebase tools
        id: cache_firebase_tools
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase_tools
          key: ${{ runner.os }}-firebase-tools-${{ hashFiles('firebase_tools.json') }}
          restore-keys: |
            ${{ runner.os }}-firebase-tools-
        if: steps.cache_firebase_tools.outputs.cache-hit != 'true'

      
      - name: Install Firebase tools
        run: |
          npm install -g firebase-tools

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Use your requirements file name

      - name: Run Python script
        run: python runscript.py ${{ github.event.inputs.app_id }} ${{ secrets.PAT_TOKEN }} ${{ secrets.FIREBASE_TOKEN }} ${{ vars.USERNAME }} ${{ inputs.email }}
        env: 
          TEST_DATA: ${{github.event.inputs.test_data}}

      - name: Generate images resources
        run: |
          cd client
          npx @capacitor/assets generate --iconBackgroundColor '#eeeeee' --iconBackgroundColorDark '#222222' --splashBackgroundColor '#eeeeee' --splashBackgroundColorDark '#111111'
          npx @capacitor/assets generate

      - name: Push to GitHub
        run: |
          git branch ezleague/${{ github.event.inputs.app_id }}
          git checkout ezleague/${{ github.event.inputs.app_id }}
          git add -A
          git commit -m "ezleague/${{ github.event.inputs.app_id }}"
          git push -u origin ezleague/${{ github.event.inputs.app_id }} --force

  notify-on-success:
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Use your requirements file name
          pip install pusher
      
      - name: Run slack.py
        run: python slack.py ${{ github.event.inputs.app_id }} 1 client

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Use your requirements file name
          pip install pusher
          
      - name: Run sendmail.py
        run: python sendmail.py ${{ github.event.inputs.app_id }} 0
      
      - name: Run slack.py
        run: python slack.py ${{ github.event.inputs.app_id }} 0 client
