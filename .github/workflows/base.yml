name: Python Workflow
on:
  # dispatch
  workflow_dispatch: # Manually trigger the workflow
    inputs:
      app_name:
        description: 'Application name'
        required: true
        default: 'unknown'


jobs:
  build:
    runs-on: ubuntu-latest  # Change the runner if needed

    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x  # Replace "x" with the desired Python version
    - name: Checkout code
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ezleague_demo
        repository: ezactivevn/ezleague
        token: ${{ secrets.PAT_TOKEN }}

    - name: Set up Git
      run: |
        git config --global user.name ${{ secrets.USERNAME }}
        git config --global user.email ${{ secrets.EMAIL }}
    
    - name: Authenticate with GitHub
      env:
        TOKEN: ${{ secrets.PAT_TOKEN }}
      run: echo "machine github.com login ${{secrets.USERNAME}} password $TOKEN" > ~/.netrc

    - name : add PAT_TOKEN
      run: export PAT_TOKEN=${{ secrets.PAT_TOKEN }}

    - name: log PAT_TOKEN
      run: echo $PAT_TOKEN

    - name : add FIREBASE_TOKEN
      run: export FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }}

    - name: log FIREBASE_TOKEN
      run: echo $FIREBASE_TOKEN

    - name: add GOOGLE_APPLICATION_CREDENTIALS 
      run: export GOOGLE_APPLICATION_CREDENTIALS=client_secret.json

    - name: log GOOGLE_APPLICATION_CREDENTIALS 
      run: echo $GOOGLE_APPLICATION_CREDENTIALS

    - name: 
      run: cd ..  # Change this to your folder name if necessary

    - name: list files
      run: ls -a

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        pip install firebase-admin
        pip install mysql-connector-python

    - name: Install Docker Compose
      run: |
        sudo apt-get remove docker docker-engine docker.io containerd runc
        sudo apt-get update
        sudo apt-get install \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo \
          "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io
        sudo docker run hello-world
        sudo apt-get install docker-compose
        sudo docker-compose --version
    
    - name: Run Python script
      run:  python runscript.py ${{ github.event.inputs.app_name }} ${{ secrets.PAT_TOKEN }} ${{ secrets.FIREBASE_TOKEN }} ${{ secrets.USERNAME }} ${{ secrets.EMAIL }}
      
    - name: Set output from result.txt
      id: set-output
      run: echo "::set-output name=repo_url::$(cat result.txt)"

  server:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Authenticate with GitHub
        env:
          TOKEN: ${{ secrets.PAT_TOKEN }}
        run: echo "machine github.com login ${{secrets.USERNAME}} password $TOKEN" > ~/.netrc
      
      - name: Clone project
        run: git clone ${{ needs.build.outputs.repo_url }}

      - name: Install composer
        run: |
          cd server
          composer install
