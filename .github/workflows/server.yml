name: Server Workflow

on:
  workflow_dispatch:
    inputs:
      app_id:
        description: "Application ID"
        required: true
        default: "unknown"
      site_id:
        description: "Site ID"
        required: true
      test_data:
        description: "Test data"
        required: true
      app_password:
        description: "User Login Password"
        required: true

jobs:
  build-server:
    runs-on: self-hosted

    env:
      APP_ID: ${{ github.event.inputs.app_id }}
      SITE_ID: ${{ github.event.inputs.site_id }}
      TEST_DATA: ${{ github.event.inputs.test_data }}
      APP_PASSWORD: ${{ github.event.inputs.app_password }}
      GCLOUD_PASSWORD: ${{ secrets.GCLOUD_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      GOOGLE_APPLICATION_CREDENTIALS: client_secret.json
      USERNAME: ${{ vars.USERNAME }}
      EMAIL: ${{ vars.EMAIL }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Install Python dependencies globally
        run: |
          echo "$GCLOUD_PASSWORD" | sudo -S pip3 install --upgrade pip
          echo "$GCLOUD_PASSWORD" | sudo -S pip3 install --no-cache-dir -r requirements.txt mysql-connector-python

      - name: Configure Git identity
        run: |
          git config --global user.name "$USERNAME"
          git config --global user.email "$EMAIL"

      - name: Remove old app directory
        run: |
          echo "$GCLOUD_PASSWORD" | sudo -S rm -rf /var/www/html/$APP_ID

      - name: Run auto.py to prepare app structure
        run: |
          python3 auto.py

      - name: List deployed app directory
        run: ls -al /var/www/html/

      - name: Run app setup scripts with root permissions
        run: |
          cd /var/www/html/$APP_ID

          echo "$GCLOUD_PASSWORD" | sudo -E -S env \
            APP_ID=$APP_ID GCLOUD_PASSWORD=$GCLOUD_PASSWORD \
            DB_HOST=$DB_HOST DB_USER=$DB_USER DB_PASSWORD=$DB_PASSWORD \
            python3 createDB.py $APP_ID $GCLOUD_PASSWORD

          echo "$GCLOUD_PASSWORD" | sudo -E -S env \
            APP_ID=$APP_ID GCLOUD_PASSWORD=$GCLOUD_PASSWORD \
            python3 settings.py $APP_ID

          echo "$GCLOUD_PASSWORD" | sudo -E -S env \
            APP_ID=$APP_ID GCLOUD_PASSWORD=$GCLOUD_PASSWORD \
            python3 setup_server.py

          echo "$GCLOUD_PASSWORD" | sudo -E -S env \
            APP_ID=$APP_ID GCLOUD_PASSWORD=$GCLOUD_PASSWORD \
            DB_HOST=$DB_HOST DB_USER=$DB_USER DB_PASSWORD=$DB_PASSWORD \
            python3 updateDB.py $APP_ID $GCLOUD_PASSWORD

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: build-server
    if: failure()

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install Python libraries for notification
        run: |
          python3 -m pip install --upgrade pip
          pip3 install --no-cache-dir mysql-connector-python pusher

      - name: Send failure email
        run: |
          python3 sendmail.py ${{ github.event.inputs.app_id }} 3
