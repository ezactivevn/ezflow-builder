name: Client Workflow
on:
  # dispatch
  workflow_dispatch: # Manually trigger the workflow
    inputs:
      app_id:
        description: 'Application ID'
        required: true
        default: 'unknown'


jobs:
  build:
    runs-on: ubuntu-latest  # Change the runner if needed

    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x  # Replace "x" with the desired Python version
    - name: Checkout code
      uses: actions/setup-node@v1
      with:
        node-version: '18.x'
    
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ezleague_demo
        repository: ezactivevn/ezleague-core
        token: ${{ secrets.PAT_TOKEN }}

    - name: Set up Git
      run: |
        git config --global user.name Phu Hoang
        git config --global user.email ${{ vars.EMAIL }}
    
    - name: Authenticate with GitHub
      env:
        TOKEN: ${{ secrets.PAT_TOKEN }}
      run: echo "machine github.com login ${{vars.USERNAME}} password $TOKEN" > ~/.netrc

    - name : add PAT_TOKEN
      run: export PAT_TOKEN=${{ secrets.PAT_TOKEN }}

    - name: log PAT_TOKEN
      run: echo $PAT_TOKEN

    - name : add FIREBASE_TOKEN
      run: export FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }}

    - name: log FIREBASE_TOKEN
      run: echo $FIREBASE_TOKEN

    - name: add GOOGLE_APPLICATION_CREDENTIALS 
      run: export GOOGLE_APPLICATION_CREDENTIALS=client_secret.json

    - name: log GOOGLE_APPLICATION_CREDENTIALS 
      run: echo $GOOGLE_APPLICATION_CREDENTIALS

    - name: 
      run: cd ..  # Change this to your folder name if necessary

    - name: list files
      run: ls -a

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        pip install firebase-admin
        pip install mysql-connector-python

    # - name: Install Docker Compose
    #   run: |
    #     sudo apt-get remove docker docker-engine docker.io containerd runc
    #     sudo apt-get update
    #     sudo apt-get install \
    #         apt-transport-https \
    #         ca-certificates \
    #         curl \
    #         gnupg \
    #         lsb-release
    #     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    #     echo \
    #       "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
    #       $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    #     sudo apt-get update
    #     sudo apt-get install docker-ce docker-ce-cli containerd.io
    #     sudo docker run hello-world
    #     sudo apt-get install docker-compose
    #     sudo docker-compose --version
    
    - name: Run Python script
      run:  python runscript.py ${{ github.event.inputs.app_id }} ${{ secrets.PAT_TOKEN }} ${{ secrets.FIREBASE_TOKEN }} ${{ vars.USERNAME }} ${{ vars.EMAIL }}

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()

    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          pip install mysql-connector-python
          pip install pusher

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run sendmail.py
      run: python sendmail.py ${{ github.event.inputs.app_id }} 0


