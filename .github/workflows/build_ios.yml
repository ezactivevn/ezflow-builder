name: Deploy IOS

on:
  workflow_dispatch: # Manually trigger the workflow
        inputs: 
          app_identifier:
            description: 'App Identifier'
            required: true
            default: 'com.example.app'
          team_id:
            description: 'Team ID'
            required: true
            default: 'XXXXXXXXXX'
          itc_team_id:
            description: 'ITC Team ID'
            required: true
            default: 'XXXXXXXXXX'
          apple_id:
            description: 'Apple ID'
            required: true
            default: 'app'
          app_name:
            description: 'App Name'
            required: true
            default: 'new_app'
          repository:
            description: 'Repository'
            required: true
            default: 'app'
          branch:
            description: 'Branch'
            required: true
            default: 'main'
           


jobs:
  build:
    runs-on: macos-latest
                
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          repository: ${{ github.event.inputs.repository }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: rm ios
        run: rm -rf client/ios

      - name: Install capacitor
        run: npm install -g @capacitor/cli

      - name: Install dependencies
        run: cd client && npm install --legacy-peer-deps

      - name: Build IOS
        run: cd client && npx cap add ios

      - name: Generate resources
        run: cd client && npx capacitor-assets generate
 
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
     
      - name: Install CocoaPods
        run: gem install cocoapods
      
      - name: Install dependencies
        run: cd client/ios/App && rm -rf Podfile.lock && rm -rf Pods && pod install

      - name: Install Fastlane
        run: gem install fastlane -NV

      - name: copy p8 file to ios
        run: cp client/AuthKey_72HCVQKN63.p8 client/ios/App/AuthKey_72HCVQKN63.p8


      - name: list files
        run: ls -la
            
      - name: Deploy IOS 
        env:
          
          APP_IDENTIFIER: ${{ github.event.inputs.app_identifier }}
          TEAM_ID: ${{ github.event.inputs.team_id }}
          APP_NAME: ${{ github.event.inputs.app_name }}
          ITC_TEAM_ID: ${{ github.event.inputs.itc_team_id }}
          APPLE_ID: ${{ github.event.inputs.apple_id }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
        run: |
          cd client/ios/App && mkdir fastlane

          echo '
          default_platform(:ios)
          match :appstore, type: 'appstore'
          match :development, type: 'development'
          ' > fastlane/Matchfile

          echo '
          default_platform(:ios)
          
          platform :ios do
            lane :deployios do
                # ...

                app_identifier = ENV["APP_IDENTIFIER"]
                team_id = ENV["TEAM_ID"]
                itc_team_id = ENV["ITC_TEAM_ID"]
                apple_id = ENV["APPLE_ID"]
                app_name = ENV["APP_NAME"]
                api_key_path = "./fastlane/AuthKey.p8"  # Path to the API key file
            
                # ...
            
                # Use the .p8 file for authentication and certificate management
                cert(
                  username: apple_id,
                  api_key_path: api_key_path,
                  api_key_id: ENV["APP_STORE_CONNECT_KEY_ID"],  # Add the key ID as a GitHub secret
                  issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"]  # Add the issuer ID as a GitHub secret
                )
            
                # Use the .p8 file for provisioning profile management
                sigh(
                  app_identifier: app_identifier,
                  username: apple_id,
                  api_key_path: api_key_path,
                  api_key_id: ENV["APP_STORE_CONNECT_KEY_ID"],  # Add the key ID as a GitHub secret
                  issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"]  # Add the issuer ID as a GitHub secret
                )
            
                # ...
            
                # Build and upload to App Store Connect
                gym(
                  scheme: "App",
                  export_method: "app-store",
                  export_options: {
                    uploadBitcode: true,
                    uploadSymbols: true
                  },
                  username: apple_id,
                  app_password: ENV["APP_SPECIFIC_PASSWORD"]
                )

             

            
            end
          end

          ' > fastlane/Fastfile

          ls -la
          fastlane deployios




        

