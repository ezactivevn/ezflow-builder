name: Server Workflow
on:
  workflow_dispatch:
    inputs:
      app_id:
        description: 'Application ID'
        required: true
        default: 'unknown'

jobs:
  build:
    runs-on: self-hosted

    env:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      GOOGLE_APPLICATION_CREDENTIALS: client_secret.json
      GCLOUD_PASSWORD: ${{ secrets.GCLOUD_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      USERNAME: ${{ vars.USERNAME }}
      EMAIL: ${{ vars.EMAIL }}

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Cache dependencies
        id: cache_python
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        if: steps.cache_python.outputs.cache-hit != 'true'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Use your requirements file name

      - name: Set up Git
        run: |
          git config --global user.name $USERNAME
          git config --global user.email $EMAIL     

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main
          repository: ${{ github.event.inputs.repo_url }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up environment variables
        run: |
          export PAT_TOKEN=${{ secrets.PAT_TOKEN }}
          export FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }}
          export GOOGLE_APPLICATION_CREDENTIALS=client_secret.json
          echo "PAT_TOKEN=$PAT_TOKEN" >> $GITHUB_ENV
          echo "FIREBASE_TOKEN=$FIREBASE_TOKEN" >> $GITHUB_ENV
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS" >> $GITHUB_ENV
      
      - name: Unzip server.zip to app_id
        run: cd /var/www/html && unzip server.zip -d ${{ github.event.inputs.app_id }}

      - name: Run auto python
        run: python auto.py
 
      - name: Remove folder server
        run: echo ${{ secrets.GCLOUD_PASSWORD }} | sudo -S rm -rf /var/www/html/${{ github.event.inputs.app_id }}
    
      - name: Copy folder server to /var/www/html/
        run: echo ${{ secrets.GCLOUD_PASSWORD }} |  sudo -S cp -r server /var/www/html/${{ github.event.inputs.app_id }}
      
      - name: List file
        run: ls -l

      - name: run python create_db.py in /var/www/html/
        run: cd /var/www/html/${{ github.event.inputs.app_id }} && python createDB.py ${{ github.event.inputs.app_id }} ${{ secrets.GCLOUD_PASSWORD }}
        env:
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Run Python script for Laravel setup
        run: cd /var/www/html/${{ github.event.inputs.app_id }} && python setup_server.py
        env:
            APP_ID: ${{ github.event.inputs.app_id }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: run python updateDB.py in /var/www/html/
        run: cd /var/www/html/${{ github.event.inputs.app_id }} && python updateDB.py ${{ github.event.inputs.app_id }} ${{ secrets.GCLOUD_PASSWORD }}
  notify-on-failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install requests
            pip install mysql-connector-python
            pip install pusher

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run sendmail.py
        run: python sendmail.py ${{ github.event.inputs.app_id }} 3

