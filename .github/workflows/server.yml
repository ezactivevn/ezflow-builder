name: Server Workflow

on:
  workflow_dispatch:
    inputs:
      app_id:
        description: 'Application ID'
        required: true
        default: 'unknown'
      site_id:
        description: 'Site ID'
        required: true
      test_data:
        description: 'Test data'
        required: true
      app_password:
        description: 'User Login Password'
        required: true

jobs:
  build:
    runs-on: self-hosted

    env:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      GOOGLE_APPLICATION_CREDENTIALS: client_secret.json
      GCLOUD_PASSWORD: ${{ secrets.GCLOUD_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      USERNAME: ${{ vars.USERNAME }}
      EMAIL: ${{ vars.EMAIL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Set up Git identity
        run: |
          git config --global user.name "$USERNAME"
          git config --global user.email "$EMAIL"

      - name: Clean old app folder
        run: |
          echo "$GCLOUD_PASSWORD" | sudo -S rm -rf /var/www/html/${{ github.event.inputs.app_id }}

      - name: Run auto.py
        run: |
          python3 auto.py
        env:
          APP_ID: ${{ github.event.inputs.app_id }}
          SITE_ID: ${{ github.event.inputs.site_id }}
          TEST_DATA: ${{ github.event.inputs.test_data }}
          GCLOUD_PASSWORD: ${{ secrets.GCLOUD_PASSWORD }}

      - name: Export environment variables to GitHub env
        run: |
          echo "PAT_TOKEN=${{ secrets.PAT_TOKEN }}" >> $GITHUB_ENV
          echo "FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }}" >> $GITHUB_ENV
          echo "GOOGLE_APPLICATION_CREDENTIALS=client_secret.json" >> $GITHUB_ENV

      - name: List files for debug
        run: ls -al

      - name: Run all setup scripts with sudo
        run: |
          cd /var/www/html/${{ github.event.inputs.app_id }}

          echo "$GCLOUD_PASSWORD" | sudo -S python3 createDB.py ${{ github.event.inputs.app_id }} $GCLOUD_PASSWORD

          echo "$GCLOUD_PASSWORD" | sudo -S python3 settings.py ${{ github.event.inputs.app_id }}

          echo "$GCLOUD_PASSWORD" | sudo -S python3 setup_server.py

          echo "$GCLOUD_PASSWORD" | sudo -S python3 updateDB.py ${{ github.event.inputs.app_id }} $GCLOUD_PASSWORD
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          APP_ID: ${{ github.event.inputs.app_id }}
          TEST_DATA: ${{ github.event.inputs.test_data }}
          APP_PASSWORD: ${{ github.event.inputs.app_password }}
          GCLOUD_PASSWORD: ${{ secrets.GCLOUD_PASSWORD }}

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()

    steps:
      - name: Install minimal Python deps
        run: |
          python3 -m pip install --upgrade pip
          pip3 install requests mysql-connector-python pusher

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Notify failure by email
        run: |
          python3 sendmail.py ${{ github.event.inputs.app_id }} 3
