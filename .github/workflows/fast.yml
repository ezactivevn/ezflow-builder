name: Fastbuild Workflow 

on:
  workflow_dispatch:
    inputs:
      app_id:
        description: "Application ID"
        required: true
        default: "unknown"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
    
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Define cache directory and repository URL
        run: |
          echo "REPO_URL=https://github.com/ezactivevn/ezleague-core.git" >> $GITHUB_ENV
          echo "CACHE_DIR=cloned_repo" >> $GITHUB_ENV

      - name: Restore cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}-project-cache
          restore-keys: |
            ${{ runner.os }}-project-cache

      - name: Clone the repository if cache is not hit
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          GH_PAT: ${{ secrets.PAT_TOKEN }}
        run: |
          git clone --branch feature/quick_build https://${GH_PAT}@github.com/ezactivevn/ezleague-core.git ${{ env.CACHE_DIR }}

      - name: Run Python script
        run: |
          python auto.py ${{ env.CACHE_DIR }} ${{ github.event.inputs.app_id }}


      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '14'


  notify-on-success:
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Use your requirements file name
          pip install pusher
      
      - name: Run slack.py
        run: python slack.py ${{ github.event.inputs.app_id }} 1 client

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Use your requirements file name
          pip install pusher

      - name: Run Slack script
        run: python slack.py ${{ github.event.inputs.app_id }} 0 client
